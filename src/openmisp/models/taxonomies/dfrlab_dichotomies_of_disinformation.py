"""Taxonomy model for DFRLab-dichotomies-of-disinformation."""

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class DfrlabDichotomiesOfDisinformationTaxonomyPredicate(str, Enum):
    PRIMARY_TARGET = "primary-target"
    PLATFORMS_ADVERTISEMENT = "platforms-advertisement"
    PLATFORMS_EMAIL = "platforms-email"
    PRIMARY_DISINFORMANT = "primary-disinformant"
    TARGET_CATEGORY = "target-category"
    TARGET_CONCURRENT_EVENTS = "target-concurrent-events"
    PLATFORMS_OPEN_WEB = "platforms-open-web"
    PLATFORMS_SOCIAL_MEDIA = "platforms-social-media"
    PLATFORMS_MESSAGING = "platforms-messaging"
    PLATFORMS = "platforms"
    CONTENT_LANGUAGE = "content-language"
    CONTENT_TOPIC = "content-topic"
    METHODS_TACTICS = "methods-tactics"
    METHODS_NARRATIVE_TECHNIQUES = "methods-narrative-techniques"
    DISINFORMANT_CATEGORY = "disinformant-category"
    DISINFORMANT_CONCURRENT_EVENTS = "disinformant-concurrent-events"
    DISINFORMANT_INTENT = "disinformant-intent"


class DfrlabDichotomiesOfDisinformationTaxonomyPrimaryTargetEntry(str, Enum):
    AD = "AD"
    AE = "AE"
    AF = "AF"
    AG = "AG"
    AI = "AI"
    AL = "AL"
    AM = "AM"
    AO = "AO"
    AQ = "AQ"
    AR = "AR"
    AS = "AS"
    AT = "AT"
    AU = "AU"
    AW = "AW"
    AX = "AX"
    AZ = "AZ"
    BA = "BA"
    BB = "BB"
    BD = "BD"
    BE = "BE"
    BF = "BF"
    BG = "BG"
    BH = "BH"
    BI = "BI"
    BJ = "BJ"
    BL = "BL"
    BM = "BM"
    BN = "BN"
    BO = "BO"
    BQ = "BQ"
    BR = "BR"
    BS = "BS"
    BT = "BT"
    BV = "BV"
    BW = "BW"
    BY = "BY"
    BZ = "BZ"
    CA = "CA"
    CC = "CC"
    CD = "CD"
    CF = "CF"
    CG = "CG"
    CH = "CH"
    CI = "CI"
    CK = "CK"
    CL = "CL"
    CM = "CM"
    CN = "CN"
    CO = "CO"
    CR = "CR"
    CU = "CU"
    CV = "CV"
    CW = "CW"
    CX = "CX"
    CY = "CY"
    CZ = "CZ"
    DE = "DE"
    DJ = "DJ"
    DK = "DK"
    DM = "DM"
    DO = "DO"
    DZ = "DZ"
    EC = "EC"
    EE = "EE"
    EG = "EG"
    EH = "EH"
    ER = "ER"
    ES = "ES"
    ET = "ET"
    FI = "FI"
    FJ = "FJ"
    FK = "FK"
    FM = "FM"
    FO = "FO"
    FR = "FR"
    GA = "GA"
    GB = "GB"
    GD = "GD"
    GE = "GE"
    GF = "GF"
    GG = "GG"
    GH = "GH"
    GI = "GI"
    GL = "GL"
    GM = "GM"
    GN = "GN"
    GP = "GP"
    GQ = "GQ"
    GR = "GR"
    GS = "GS"
    GT = "GT"
    GU = "GU"
    GW = "GW"
    GY = "GY"
    HK = "HK"
    HM = "HM"
    HN = "HN"
    HR = "HR"
    HT = "HT"
    HU = "HU"
    ID = "ID"
    IE = "IE"
    IL = "IL"
    IM = "IM"
    IN = "IN"
    IO = "IO"
    IQ = "IQ"
    IR = "IR"
    IS = "IS"
    IT = "IT"
    JE = "JE"
    JM = "JM"
    JO = "JO"
    JP = "JP"
    KE = "KE"
    KG = "KG"
    KH = "KH"
    KI = "KI"
    KM = "KM"
    KN = "KN"
    KP = "KP"
    KR = "KR"
    KW = "KW"
    KY = "KY"
    KZ = "KZ"
    LA = "LA"
    LB = "LB"
    LC = "LC"
    LI = "LI"
    LK = "LK"
    LR = "LR"
    LS = "LS"
    LT = "LT"
    LU = "LU"
    LV = "LV"
    LY = "LY"
    MA = "MA"
    MC = "MC"
    MD = "MD"
    ME = "ME"
    MF = "MF"
    MG = "MG"
    MH = "MH"
    MK = "MK"
    ML = "ML"
    MM = "MM"
    MN = "MN"
    MO = "MO"
    MP = "MP"
    MQ = "MQ"
    MR = "MR"
    MS = "MS"
    MT = "MT"
    MU = "MU"
    MV = "MV"
    MW = "MW"
    MX = "MX"
    MY = "MY"
    MZ = "MZ"
    NA = "NA"
    NC = "NC"
    NE = "NE"
    NF = "NF"
    NG = "NG"
    NI = "NI"
    NL = "NL"
    NO = "NO"
    NP = "NP"
    NR = "NR"
    NU = "NU"
    NZ = "NZ"
    OM = "OM"
    OTHER = "Other"
    PA = "PA"
    PE = "PE"
    PF = "PF"
    PG = "PG"
    PH = "PH"
    PK = "PK"
    PL = "PL"
    PM = "PM"
    PN = "PN"
    PR = "PR"
    PS = "PS"
    PT = "PT"
    PW = "PW"
    PY = "PY"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RS = "RS"
    RU = "RU"
    RW = "RW"
    SA = "SA"
    SB = "SB"
    SC = "SC"
    SD = "SD"
    SE = "SE"
    SG = "SG"
    SH = "SH"
    SI = "SI"
    SJ = "SJ"
    SK = "SK"
    SL = "SL"
    SM = "SM"
    SN = "SN"
    SO = "SO"
    SR = "SR"
    SS = "SS"
    ST = "ST"
    SV = "SV"
    SX = "SX"
    SY = "SY"
    SZ = "SZ"
    TC = "TC"
    TD = "TD"
    TF = "TF"
    TG = "TG"
    TH = "TH"
    TJ = "TJ"
    TK = "TK"
    TL = "TL"
    TM = "TM"
    TN = "TN"
    TO = "TO"
    TR = "TR"
    TT = "TT"
    TV = "TV"
    TW = "TW"
    TZ = "TZ"
    UA = "UA"
    UG = "UG"
    UM = "UM"
    US = "US"
    UY = "UY"
    UZ = "UZ"
    UNKNOWN = "Unknown"
    VA = "VA"
    VC = "VC"
    VE = "VE"
    VG = "VG"
    VI = "VI"
    VN = "VN"
    VU = "VU"
    WF = "WF"
    WS = "WS"
    YE = "YE"
    YT = "YT"
    ZA = "ZA"
    ZM = "ZM"
    ZW = "ZW"


class DfrlabDichotomiesOfDisinformationTaxonomyPrimaryDisinformantEntry(str, Enum):
    AD = "AD"
    AE = "AE"
    AF = "AF"
    AG = "AG"
    AI = "AI"
    AL = "AL"
    AM = "AM"
    AO = "AO"
    AQ = "AQ"
    AR = "AR"
    AS = "AS"
    AT = "AT"
    AU = "AU"
    AW = "AW"
    AX = "AX"
    AZ = "AZ"
    BA = "BA"
    BB = "BB"
    BD = "BD"
    BE = "BE"
    BF = "BF"
    BG = "BG"
    BH = "BH"
    BI = "BI"
    BJ = "BJ"
    BL = "BL"
    BM = "BM"
    BN = "BN"
    BO = "BO"
    BQ = "BQ"
    BR = "BR"
    BS = "BS"
    BT = "BT"
    BV = "BV"
    BW = "BW"
    BY = "BY"
    BZ = "BZ"
    CA = "CA"
    CC = "CC"
    CD = "CD"
    CF = "CF"
    CG = "CG"
    CH = "CH"
    CI = "CI"
    CK = "CK"
    CL = "CL"
    CM = "CM"
    CN = "CN"
    CO = "CO"
    CR = "CR"
    CU = "CU"
    CV = "CV"
    CW = "CW"
    CX = "CX"
    CY = "CY"
    CZ = "CZ"
    DE = "DE"
    DJ = "DJ"
    DK = "DK"
    DM = "DM"
    DO = "DO"
    DZ = "DZ"
    EC = "EC"
    EE = "EE"
    EG = "EG"
    EH = "EH"
    ER = "ER"
    ES = "ES"
    ET = "ET"
    FI = "FI"
    FJ = "FJ"
    FK = "FK"
    FM = "FM"
    FO = "FO"
    FR = "FR"
    GA = "GA"
    GB = "GB"
    GD = "GD"
    GE = "GE"
    GF = "GF"
    GG = "GG"
    GH = "GH"
    GI = "GI"
    GL = "GL"
    GM = "GM"
    GN = "GN"
    GP = "GP"
    GQ = "GQ"
    GR = "GR"
    GS = "GS"
    GT = "GT"
    GU = "GU"
    GW = "GW"
    GY = "GY"
    HK = "HK"
    HM = "HM"
    HN = "HN"
    HR = "HR"
    HT = "HT"
    HU = "HU"
    ID = "ID"
    IE = "IE"
    IL = "IL"
    IM = "IM"
    IN = "IN"
    IO = "IO"
    IQ = "IQ"
    IR = "IR"
    IS = "IS"
    IT = "IT"
    JE = "JE"
    JM = "JM"
    JO = "JO"
    JP = "JP"
    KE = "KE"
    KG = "KG"
    KH = "KH"
    KI = "KI"
    KM = "KM"
    KN = "KN"
    KP = "KP"
    KR = "KR"
    KW = "KW"
    KY = "KY"
    KZ = "KZ"
    LA = "LA"
    LB = "LB"
    LC = "LC"
    LI = "LI"
    LK = "LK"
    LR = "LR"
    LS = "LS"
    LT = "LT"
    LU = "LU"
    LV = "LV"
    LY = "LY"
    MA = "MA"
    MC = "MC"
    MD = "MD"
    ME = "ME"
    MF = "MF"
    MG = "MG"
    MH = "MH"
    MK = "MK"
    ML = "ML"
    MM = "MM"
    MN = "MN"
    MO = "MO"
    MP = "MP"
    MQ = "MQ"
    MR = "MR"
    MS = "MS"
    MT = "MT"
    MU = "MU"
    MV = "MV"
    MW = "MW"
    MX = "MX"
    MY = "MY"
    MZ = "MZ"
    NA = "NA"
    NC = "NC"
    NE = "NE"
    NF = "NF"
    NG = "NG"
    NI = "NI"
    NL = "NL"
    NO = "NO"
    NP = "NP"
    NR = "NR"
    NU = "NU"
    NZ = "NZ"
    OM = "OM"
    OTHER = "Other"
    PA = "PA"
    PE = "PE"
    PF = "PF"
    PG = "PG"
    PH = "PH"
    PK = "PK"
    PL = "PL"
    PM = "PM"
    PN = "PN"
    PR = "PR"
    PS = "PS"
    PT = "PT"
    PW = "PW"
    PY = "PY"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RS = "RS"
    RU = "RU"
    RW = "RW"
    SA = "SA"
    SB = "SB"
    SC = "SC"
    SD = "SD"
    SE = "SE"
    SG = "SG"
    SH = "SH"
    SI = "SI"
    SJ = "SJ"
    SK = "SK"
    SL = "SL"
    SM = "SM"
    SN = "SN"
    SO = "SO"
    SR = "SR"
    SS = "SS"
    ST = "ST"
    SV = "SV"
    SX = "SX"
    SY = "SY"
    SZ = "SZ"
    TC = "TC"
    TD = "TD"
    TF = "TF"
    TG = "TG"
    TH = "TH"
    TJ = "TJ"
    TK = "TK"
    TL = "TL"
    TM = "TM"
    TN = "TN"
    TO = "TO"
    TR = "TR"
    TT = "TT"
    TV = "TV"
    TW = "TW"
    TZ = "TZ"
    UA = "UA"
    UG = "UG"
    UM = "UM"
    US = "US"
    UY = "UY"
    UZ = "UZ"
    UNKNOWN = "Unknown"
    VA = "VA"
    VC = "VC"
    VE = "VE"
    VG = "VG"
    VI = "VI"
    VN = "VN"
    VU = "VU"
    WF = "WF"
    WS = "WS"
    YE = "YE"
    YT = "YT"
    ZA = "ZA"
    ZM = "ZM"
    ZW = "ZW"


class DfrlabDichotomiesOfDisinformationTaxonomyTargetCategoryEntry(str, Enum):
    GOVERNMENT_CIVILIAN = "government-civilian"
    GOVERNMENT_MILITARY = "government-military"
    POLITICAL_PARTY = "political-party"
    NON_STATE_POLITICAL_ACTOR = "non-state-political-actor"
    BUSINESS = "business"
    INFLUENTIAL_INDIVIDUALS = "influential-individuals"
    ELECTORATE = "electorate"
    RACIAL = "racial"
    ETHNIC = "ethnic"
    SEXUAL_IDENTITY_GROUP = "sexual-identity-group"
    RELIGIOUS = "religious"


class DfrlabDichotomiesOfDisinformationTaxonomyTargetConcurrentEventsEntry(str, Enum):
    INTER_STATE_WAR = "inter-state-war"
    EXTRA_STATE_WAR = "extra-state-war"
    INTRA_STATE_WAR = "intra-state-war"
    NON_STATE_WAR = "non-state-war"
    FEDERAL_ELECTION = "federal-election"
    STATE_ELECTION = "state-election"


class DfrlabDichotomiesOfDisinformationTaxonomyPlatformsOpenWebEntry(str, Enum):
    STATE_MEDIA = "state-media"
    INDEPENDENT_MEDIA = "independent-media"
    JUNK_NEWS_WEBSITES = "junk-news-websites"


class DfrlabDichotomiesOfDisinformationTaxonomyPlatformsSocialMediaEntry(str, Enum):
    FACEBOOK = "facebook"
    INSTAGRAM = "instagram"
    TWITTER = "twitter"
    YOUTUBE = "youtube"
    LINKEDIN = "linkedin"
    REDDIT = "reddit"
    VK = "vk"
    FORUM = "forum"
    OTHER = "other"


class DfrlabDichotomiesOfDisinformationTaxonomyPlatformsMessagingEntry(str, Enum):
    WHATSAPP = "whatsapp"
    TELEGRAM = "telegram"
    SIGNAL = "signal"
    LINE = "line"
    WECHAT = "wechat"
    SMS = "sms"
    OTHER = "other"


class DfrlabDichotomiesOfDisinformationTaxonomyPlatformsEntry(str, Enum):
    ADVERTISEMENT = "advertisement"
    EMAIL = "email"
    OTHER = "other"


class DfrlabDichotomiesOfDisinformationTaxonomyContentLanguageEntry(str, Enum):
    ENGLISH = "english"
    RUSSIAN = "russian"
    FRENCH = "french"
    CHINESE = "chinese"
    GERMAN = "german"
    SPANISH = "spanish"
    HINDI = "hindi"
    PORTUGUESE = "portuguese"
    BENGALI = "bengali"
    JAPANESE = "japanese"
    TURKISH = "turkish"
    POLISH = "polish"
    UKRAINIAN = "ukrainian"
    ARABIC = "arabic"
    IRANIAN_PERSIAN = "iranian-persian"


class DfrlabDichotomiesOfDisinformationTaxonomyContentTopicEntry(str, Enum):
    GOVERNMENT = "government"
    MILITARY = "military"
    POLITICAL_PARTY = "political-party"
    ELECTIONS = "elections"
    NON_STATE_POLITICAL_ACTOR = "non-state-political-actor"
    BUSINESS = "business"
    INFLUENTIAL_INDIVIDUALS = "influential-individuals"
    RACIAL = "racial"
    ETHNIC = "ethnic"
    RELIGIOUS = "religious"
    SEXUAL_IDENTITY_GROUP = "sexual-identity-group"
    TERRORISM = "terrorism"
    IMMIGRATION = "immigration"
    ECONOMIC_ISSUE = "economic-issue"
    OTHER = "other"


class DfrlabDichotomiesOfDisinformationTaxonomyMethodsTacticsEntry(str, Enum):
    BRIGADING = "brigading"
    SOCKPUPPETS = "sockpuppets"
    BOTNETS = "botnets"
    SEARCH_ENGINE_MANIPULATION = "search-engine-manipulation"
    DDOS = "ddos"
    DATA_EXFILTRATION = "data-exfiltration"
    DEEP_LEARNING_PROCESSES = "deep-learning-processes"
    OTHER = "other"


class DfrlabDichotomiesOfDisinformationTaxonomyMethodsNarrativeTechniquesEntry(str, Enum):
    CONSTRUCTIVE_ACTIVATE = "constructive-activate"
    CONSTRUCTIVE_ASTROTURF = "constructive-astroturf"
    DESTRUCTIVE_SUPPRESS = "destructive-suppress"
    DESTRUCTIVE_DISCREDIT = "destructive-discredit"
    OBLIQUE_TROLL = "oblique-troll"
    OBLIQUE_FLOOD = "oblique-flood"


class DfrlabDichotomiesOfDisinformationTaxonomyDisinformantCategoryEntry(str, Enum):
    GOVERNMENT_DIRECT_ATTRIBUTION = "government-direct-attribution"
    GOVERNMENT_INFERRED_ATTRIBUTION = "government-inferred-attribution"
    POLITICAL_PARTY = "political-party"
    NON_STATE_POLITICAL_ACTOR = "non-state-political-actor"
    BUSINESS = "business"
    INFLUENTIAL_INDIVIDUALS = "influential-individuals"
    ELECTORATE = "electorate"
    RACIAL = "racial"
    ETHNIC = "ethnic"
    SEXUAL_IDENTITY_GROUP = "sexual-identity-group"
    RELIGIOUS = "religious"


class DfrlabDichotomiesOfDisinformationTaxonomyDisinformantConcurrentEventsEntry(str, Enum):
    INTER_STATE_WAR = "inter-state-war"
    EXTRA_STATE_WAR = "extra-state-war"
    INTRA_STATE_WAR = "intra-state-war"
    NON_STATE_WAR = "non-state-war"
    FEDERAL_ELECTION = "federal-election"
    STATE_ELECTION = "state-election"


class DfrlabDichotomiesOfDisinformationTaxonomyDisinformantIntentEntry(str, Enum):
    CIVIL = "civil"
    SOCIAL = "social"
    ECONOMIC = "economic"
    MILITARY = "military"


class DfrlabDichotomiesOfDisinformationTaxonomy(BaseModel):
    """Model for the DFRLab-dichotomies-of-disinformation taxonomy."""

    namespace: str = "DFRLab-dichotomies-of-disinformation"
    description: str = """DFRLab Dichotomies of Disinformation."""
    version: int = 1
    exclusive: bool = False
    predicates: List[DfrlabDichotomiesOfDisinformationTaxonomyPredicate] = []
    primary_target_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPrimaryTargetEntry] = []
    primary_disinformant_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPrimaryDisinformantEntry] = []
    target_category_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyTargetCategoryEntry] = []
    target_concurrent_events_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyTargetConcurrentEventsEntry] = []
    platforms_open_web_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPlatformsOpenWebEntry] = []
    platforms_social_media_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPlatformsSocialMediaEntry] = []
    platforms_messaging_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPlatformsMessagingEntry] = []
    platforms_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyPlatformsEntry] = []
    content_language_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyContentLanguageEntry] = []
    content_topic_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyContentTopicEntry] = []
    methods_tactics_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyMethodsTacticsEntry] = []
    methods_narrative_techniques_entries: List[
        DfrlabDichotomiesOfDisinformationTaxonomyMethodsNarrativeTechniquesEntry
    ] = []
    disinformant_category_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyDisinformantCategoryEntry] = []
    disinformant_concurrent_events_entries: List[
        DfrlabDichotomiesOfDisinformationTaxonomyDisinformantConcurrentEventsEntry
    ] = []
    disinformant_intent_entries: List[DfrlabDichotomiesOfDisinformationTaxonomyDisinformantIntentEntry] = []

    @classmethod
    def get_tag(cls, predicate: str, entry: Optional[str] = None) -> str:
        """Get the full tag for a predicate and optional entry."""
        if entry:
            return f"{cls.namespace}:{predicate}='{entry}'"
        return f"{cls.namespace}:{predicate}"
