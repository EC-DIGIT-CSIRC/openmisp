"""Taxonomy model for maec-malware-behavior."""

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class MaecMalwareBehaviorTaxonomyPredicate(str, Enum):
    MAEC_MALWARE_BEHAVIOR = "maec-malware-behavior"


class MaecMalwareBehaviorTaxonomyMaecMalwareBehaviorEntry(str, Enum):
    ACCESS_PREMIUM_SERVICE = "access-premium-service"
    AUTONOMOUS_REMOTE_INFECTION = "autonomous-remote-infection"
    BLOCK_SECURITY_WEBSITES = "block-security-websites"
    CAPTURE_CAMERA_INPUT = "capture-camera-input"
    CAPTURE_FILE_SYSTEM_DATA = "capture-file-system-data"
    CAPTURE_GPS_DATA = "capture-gps-data"
    CAPTURE_KEYBOARD_INPUT = "capture-keyboard-input"
    CAPTURE_MICROPHONE_INPUT = "capture-microphone-input"
    CAPTURE_MOUSE_INPUT = "capture-mouse-input"
    CAPTURE_PRINTER_OUTPUT = "capture-printer-output"
    CAPTURE_SYSTEM_MEMORY = "capture-system-memory"
    CAPTURE_SYSTEM_NETWORK_TRAFFIC = "capture-system-network-traffic"
    CAPTURE_SYSTEM_SCREENSHOT = "capture-system-screenshot"
    CAPTURE_TOUCHSCREEN_INPUT = "capture-touchscreen-input"
    CHECK_FOR_PAYLOAD = "check-for-payload"
    CLICK_FRAUD = "click-fraud"
    COMPARE_HOST_FINGERPRINTS = "compare-host-fingerprints"
    COMPROMISE_REMOTE_MACHINE = "compromise-remote-machine"
    CONTROL_LOCAL_MACHINE_VIA_REMOTE_COMMAND = "control-local-machine-via-remote-command"
    CONTROL_MALWARE_VIA_REMOTE_COMMAND = "control-malware-via-remote-command"
    CRACK_PASSWORDS = "crack-passwords"
    DEFEAT_CALL_GRAPH_GENERATION = "defeat-call-graph-generation"
    DEFEAT_EMULATOR = "defeat-emulator"
    DEFEAT_FLOW_ORIENTED_DISASSEMBLER = "defeat-flow-oriented-disassembler"
    DEFEAT_LINEAR_DISASSEMBLER = "defeat-linear-disassembler"
    DEGRADE_SECURITY_PROGRAM = "degrade-security-program"
    DENIAL_OF_SERVICE = "denial-of-service"
    DESTROY_HARDWARE = "destroy-hardware"
    DETECT_DEBUGGING = "detect-debugging"
    DETECT_EMULATOR = "detect-emulator"
    DETECT_INSTALLED_ANALYSIS_TOOLS = "detect-installed-analysis-tools"
    DETECT_INSTALLED_AV_TOOLS = "detect-installed-av-tools"
    DETECT_SANDBOX_ENVIRONMENT = "detect-sandbox-environment"
    DETECT_VM_ENVIRONMENT = "detect-vm-environment"
    DETERMINE_HOST_IP_ADDRESS = "determine-host-ip-address"
    DISABLE_ACCESS_RIGHTS_CHECKING = "disable-access-rights-checking"
    DISABLE_FIREWALL = "disable-firewall"
    DISABLE_KERNEL_PATCH_PROTECTION = "disable-kernel-patch-protection"
    DISABLE_OS_SECURITY_ALERTS = "disable-os-security-alerts"
    DISABLE_PRIVILEGE_LIMITING = "disable-privilege-limiting"
    DISABLE_SERVICE_PACK_PATCH_INSTALLATION = "disable-service-pack-patch-installation"
    DISABLE_SYSTEM_FILE_OVERWRITE_PROTECTION = "disable-system-file-overwrite-protection"
    DISABLE_UPDATE_SERVICES_DAEMONS = "disable-update-services-daemons"
    DISABLE_USER_ACCOUNT_CONTROL = "disable-user-account-control"
    DROP_RETRIEVE_DEBUG_LOG_FILE = "drop-retrieve-debug-log-file"
    ELEVATE_PRIVILEGE = "elevate-privilege"
    ENCRYPT_DATA = "encrypt-data"
    ENCRYPT_FILES = "encrypt-files"
    ENCRYPT_SELF = "encrypt-self"
    ERASE_DATA = "erase-data"
    EVADE_STATIC_HEURISTIC = "evade-static-heuristic"
    EXECUTE_BEFORE_EXTERNAL_TO_KERNEL_HYPERVISOR = "execute-before-external-to-kernel-hypervisor"
    EXECUTE_NON_MAIN_CPU_CODE = "execute-non-main-cpu-code"
    EXECUTE_STEALTHY_CODE = "execute-stealthy-code"
    EXFILTRATE_DATA_VIA_COVERT_CHANNEL = "exfiltrate-data-via-covert channel"
    EXFILTRATE_DATA_VIA__DUMPSTER_DIVE = "exfiltrate-data-via--dumpster-dive"
    EXFILTRATE_DATA_VIA_FAX = "exfiltrate-data-via-fax"
    EXFILTRATE_DATA_VIA_NETWORK = "exfiltrate-data-via-network"
    EXFILTRATE_DATA_VIA_PHYSICAL_MEDIA = "exfiltrate-data-via-physical-media"
    EXFILTRATE_DATA_VIA_VOIP_PHONE = "exfiltrate-data-via-voip-phone"
    FEED_MISINFORMATION_DURING_PHYSICAL_MEMORY_ACQUISITION = "feed-misinformation-during-physical-memory-acquisition"
    FILE_SYSTEM_INSTANTIATION = "file-system-instantiation"
    FINGERPRINT_HOST = "fingerprint-host"
    GENERATE_C2_DOMAIN_NAMES = "generate-c2-domain-names"
    HIDE_ARBITRARY_VIRTUAL_MEMORY = "hide-arbitrary-virtual-memory"
    HIDE_DATA_IN_OTHER_FORMATS = "hide-data-in-other-formats"
    HIDE_FILE_SYSTEM_ARTIFACTS = "hide-file-system-artifacts"
    HIDE_KERNEL_MODULES = "hide-kernel-modules"
    HIDE_NETWORK_TRAFFIC = "hide-network-traffic"
    HIDE_OPEN_NETWORK_PORTS = "hide-open-network-ports"
    HIDE_PROCESSES = "hide-processes"
    HIDE_SERVICES = "hide-services"
    HIDE_THREADS = "hide-threads"
    HIDE_USERSPACE_LIBRARIES = "hide-userspace-libraries"
    IDENTIFY_FILE = "identify-file"
    IDENTIFY_OS = "identify-os"
    IDENTIFY_TARGET_MACHINES = "identify-target-machines"
    IMPERSONATE_USER = "impersonate-user"
    INSTALL_BACKDOOR = "install-backdoor"
    INSTALL_LEGITIMATE_SOFTWARE = "install-legitimate-software"
    INSTALL_SECONDARY_MALWARE = "install-secondary-malware"
    INSTALL_SECONDARY_MODULE = "install-secondary-module"
    INTERCEPT_MANIPULATE_NETWORK_TRAFFIC = "intercept-manipulate-network-traffic"
    INVENTORY_SECURITY_PRODUCTS = "inventory-security-products"
    INVENTORY_SYSTEM_APPLICATIONS = "inventory-system-applications"
    INVENTORY_VICTIMS = "inventory-victims"
    LIMIT_APPLICATION_TYPE_VERSION = "limit-application-type-version"
    LOG_ACTIVITY = "log-activity"
    MANIPULATE_FILE_SYSTEM_DATA = "manipulate-file-system-data"
    MAP_LOCAL_NETWORK = "map-local-network"
    MINE_FOR_CRYPTOCURRENCY = "mine-for-cryptocurrency"
    MODIFY_FILE = "modify-file"
    MODIFY_SECURITY_SOFTWARE_CONFIGURATION = "modify-security-software-configuration"
    MOVE_DATA_TO_STAGING_SERVER = "move-data-to-staging-server"
    OBFUSCATE_ARTIFACT_PROPERTIES = "obfuscate-artifact-properties"
    OVERLOAD_SANDBOX = "overload-sandbox"
    PACKAGE_DATA = "package-data"
    PERSIST_AFTER_HARDWARE_CHANGES = "persist-after-hardware-changes"
    PERSIST_AFTER_OS_CHANGES = "persist-after-os-changes"
    PERSIST_AFTER_SYSTEM_REBOOT = "persist-after-system-reboot"
    PREVENT_API_UNHOOKING = "prevent-api-unhooking"
    PREVENT_CONCURRENT_EXECUTION = "prevent-concurrent-execution"
    PREVENT_DEBUGGING = "prevent-debugging"
    PREVENT_FILE_ACCESS = "prevent-file-access"
    PREVENT_FILE_DELETION = "prevent-file-deletion"
    PREVENT_MEMORY_ACCESS = "prevent-memory-access"
    PREVENT_NATIVE_API_HOOKING = "prevent-native-api-hooking"
    PREVENT_PHYSICAL_MEMORY_ACQUISITION = "prevent-physical-memory-acquisition"
    PREVENT_REGISTRY_ACCESS = "prevent-registry-access"
    PREVENT_REGISTRY_DELETION = "prevent-registry-deletion"
    PREVENT_SECURITY_SOFTWARE_FROM_EXECUTING = "prevent-security-software-from-executing"
    RE_INSTANTIATE_SELF = "re-instantiate-self"
    REMOVE_SELF = "remove-self"
    REMOVE_SMS_WARNING_MESSAGES = "remove-sms-warning-messages"
    REMOVE_SYSTEM_ARTIFACTS = "remove-system-artifacts"
    REQUEST_EMAIL_ADDRESS_LIST = "request-email-address-list"
    REQUEST_EMAIL_TEMPLATE = "request-email-template"
    SEARCH_FOR_REMOTE_MACHINES = "search-for-remote-machines"
    SEND_BEACON = "send-beacon"
    SEND_EMAIL_MESSAGE = "send-email-message"
    SOCIAL_ENGINEERING_BASED_REMOTE_INFECTION = "social-engineering-based-remote-infection"
    STEAL_BROWSER_CACHE = "steal-browser-cache"
    STEAL_BROWSER_COOKIES = "steal-browser-cookies"
    STEAL_BROWSER_HISTORY = "steal-browser-history"
    STEAL_CONTACT_LIST_DATA = "steal-contact-list-data"
    STEAL_CRYPTOCURRENCY_DATA = "steal-cryptocurrency-data"
    STEAL_DATABASE_CONTENT = "steal-database-content"
    STEAL_DIALED_PHONE_NUMBERS = "steal-dialed-phone-numbers"
    STEAL_DIGITAL_CERTIFICATES = "steal-digital-certificates"
    STEAL_DOCUMENTS = "steal-documents"
    STEAL_EMAIL_DATA = "steal-email-data"
    STEAL_IMAGES = "steal-images"
    STEAL_PASSWORD_HASHES = "steal-password-hashes"
    STEAL_PKI_KEY = "steal-pki-key"
    STEAL_REFERRER_URLS = "steal-referrer-urls"
    STEAL_SERIAL_NUMBERS = "steal-serial-numbers"
    STEAL_SMS_DATABASE = "steal-sms-database"
    STEAL_WEB_NETWORK_CREDENTIAL = "steal-web-network-credential"
    STOP_EXECUTION_OF_SECURITY_SOFTWARE = "stop-execution-of-security-software"
    SUICIDE_EXIT = "suicide-exit"
    TEST_FOR_FIREWALL = "test-for-firewall"
    TEST_FOR_INTERNET_CONNECTIVITY = "test-for-internet-connectivity"
    TEST_FOR_NETWORK_DRIVES = "test-for-network-drives"
    TEST_FOR_PROXY = "test-for-proxy"
    TEST_SMTP_CONNECTION = "test-smtp-connection"
    UPDATE_CONFIGURATION = "update-configuration"
    VALIDATE_DATA = "validate-data"
    WRITE_CODE_INTO_FILE = "write-code-into-file"


class MaecMalwareBehaviorTaxonomy(BaseModel):
    """Model for the maec-malware-behavior taxonomy."""

    namespace: str = "maec-malware-behavior"
    description: str = """Malware behaviours based on MAEC 5.0"""
    version: int = 1
    exclusive: bool = False
    predicates: List[MaecMalwareBehaviorTaxonomyPredicate] = []
    maec_malware_behavior_entries: List[MaecMalwareBehaviorTaxonomyMaecMalwareBehaviorEntry] = []

    @classmethod
    def get_tag(cls, predicate: str, entry: Optional[str] = None) -> str:
        """Get the full tag for a predicate and optional entry."""
        if entry:
            return f"{cls.namespace}:{predicate}='{entry}'"
        return f"{cls.namespace}:{predicate}"
